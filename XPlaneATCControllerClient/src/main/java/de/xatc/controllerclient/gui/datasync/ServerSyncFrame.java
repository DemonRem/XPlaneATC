
package de.xatc.controllerclient.gui.datasync;

import de.mytools.tools.swing.SwingTools;
import de.xatc.commons.networkpackets.atc.datasync.RequestSyncPacket;
import de.xatc.controllerclient.config.XHSConfig;
import de.xatc.controllerclient.db.DBSessionManager;
import javax.swing.JButton;
import javax.swing.JProgressBar;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;



public class ServerSyncFrame extends javax.swing.JFrame {

    /**
     * Creates new form ServerSyncFrame
     */
    public ServerSyncFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        syncFirButton = new javax.swing.JButton();
        syncAirportsButton = new javax.swing.JButton();
        SyncCountriesButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        firProgress = new javax.swing.JProgressBar();
        airportProgress = new javax.swing.JProgressBar();
        countryProgress = new javax.swing.JProgressBar();
        closeButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Server Runtime Data Synchronization");

        syncFirButton.setText("Sync Firs");
        syncFirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncFirButtonActionPerformed(evt);
            }
        });

        syncAirportsButton.setText("Sync Airports");
        syncAirportsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncAirportsButtonActionPerformed(evt);
            }
        });

        SyncCountriesButton.setText("Sync Countries");
        SyncCountriesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SyncCountriesButtonActionPerformed(evt);
            }
        });

        closeButton.setText("close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Fir Progress");

        jLabel4.setText("Airport Progress");

        jLabel5.setText("Country Progress");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(syncFirButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(syncAirportsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SyncCountriesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(firProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
                        .addComponent(airportProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(countryProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(closeButton)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(syncFirButton)
                .addGap(18, 18, 18)
                .addComponent(syncAirportsButton)
                .addGap(18, 18, 18)
                .addComponent(SyncCountriesButton)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airportProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countryProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(closeButton)
                .addGap(0, 97, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void syncFirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncFirButtonActionPerformed
        if (XHSConfig.getDataClient() == null) {
            SwingTools.alertWindow("Not Connected!", this);
            return;
        }
        Session s = DBSessionManager.getSession();

        Transaction tx = s.beginTransaction();
        Query q = s.createQuery("delete from Fir");
        q.executeUpdate();
        tx.commit();

        DBSessionManager.closeSession(s);
        RequestSyncPacket sync = new RequestSyncPacket();
        sync.setDataSetToSync("fir");
        XHSConfig.getDataClient().writeMessage(sync);
        
        
    }//GEN-LAST:event_syncFirButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        XHSConfig.setServerSyncFrame(null);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        XHSConfig.setServerSyncFrame(null);
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void syncAirportsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncAirportsButtonActionPerformed
        
         if (XHSConfig.getDataClient() == null) {
            SwingTools.alertWindow("Not Connected!", this);
            return;
        }
        Session s = DBSessionManager.getSession();

        Transaction tx = s.beginTransaction();
        Query q = s.createQuery("delete from PlainAirport");
        q.executeUpdate();
        tx.commit();

        DBSessionManager.closeSession(s);
        RequestSyncPacket sync = new RequestSyncPacket();
        sync.setDataSetToSync("airport");
        XHSConfig.getDataClient().writeMessage(sync);
        
        
    }//GEN-LAST:event_syncAirportsButtonActionPerformed

    private void SyncCountriesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SyncCountriesButtonActionPerformed
         if (XHSConfig.getDataClient() == null) {
            SwingTools.alertWindow("Not Connected!", this);
            return;
        }
        Session s = DBSessionManager.getSession();

        Transaction tx = s.beginTransaction();
        Query q = s.createQuery("delete from Country");
        q.executeUpdate();
        tx.commit();

        DBSessionManager.closeSession(s);
        RequestSyncPacket sync = new RequestSyncPacket();
        sync.setDataSetToSync("country");
        XHSConfig.getDataClient().writeMessage(sync);
    }//GEN-LAST:event_SyncCountriesButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerSyncFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerSyncFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerSyncFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerSyncFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerSyncFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton SyncCountriesButton;
    private javax.swing.JProgressBar airportProgress;
    private javax.swing.JButton closeButton;
    private javax.swing.JProgressBar countryProgress;
    private javax.swing.JProgressBar firProgress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    public javax.swing.JButton syncAirportsButton;
    public javax.swing.JButton syncFirButton;
    // End of variables declaration//GEN-END:variables

    public JProgressBar getAirportProgress() {
        return airportProgress;
    }

    public void setAirportProgress(JProgressBar airportProgress) {
        this.airportProgress = airportProgress;
    }

    public JProgressBar getCountryProgress() {
        return countryProgress;
    }

    public void setCountryProgress(JProgressBar countryProgress) {
        this.countryProgress = countryProgress;
    }

    public JProgressBar getFirProgress() {
        return firProgress;
    }

    public void setFirProgress(JProgressBar firProgress) {
        this.firProgress = firProgress;
    }

    public JButton getSyncCountriesButton() {
        return SyncCountriesButton;
    }

    public void setSyncCountriesButton(JButton SyncCountriesButton) {
        this.SyncCountriesButton = SyncCountriesButton;
    }

    public JButton getSyncAirportsButton() {
        return syncAirportsButton;
    }

    public void setSyncAirportsButton(JButton syncAirportsButton) {
        this.syncAirportsButton = syncAirportsButton;
    }

    public JButton getSyncFirButton() {
        return syncFirButton;
    }

    public void setSyncFirButton(JButton syncFirButton) {
        this.syncFirButton = syncFirButton;
    }
    
    



}
