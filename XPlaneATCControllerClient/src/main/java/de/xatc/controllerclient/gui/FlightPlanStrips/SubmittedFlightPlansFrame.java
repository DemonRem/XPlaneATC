
package de.xatc.controllerclient.gui.FlightPlanStrips;

import de.xatc.commons.networkpackets.client.SubmittedFlightPlan;
import de.xatc.controllerclient.config.XHSConfig;
import de.xatc.controllerclient.db.DBSessionManager;
import java.util.List;
import javax.swing.JPanel;
import org.hibernate.Session;
import org.jdesktop.swingx.VerticalLayout;

/**
 *
 * @author Mirko
 */


public class SubmittedFlightPlansFrame extends javax.swing.JFrame {

    private boolean myStrips;
    /**
     * Creates new form SubmittedFlightPlansFrame
     */
    public SubmittedFlightPlansFrame(boolean myStrips) {
        this.myStrips = myStrips;
        initComponents();
        loadStrips();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stripsPanel = new javax.swing.JPanel();
        setLayout(new VerticalLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout stripsPanelLayout = new javax.swing.GroupLayout(stripsPanel);
        stripsPanel.setLayout(stripsPanelLayout);
        stripsPanelLayout.setHorizontalGroup(
            stripsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 837, Short.MAX_VALUE)
        );
        stripsPanelLayout.setVerticalGroup(
            stripsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(stripsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.myStrips) {
            XHSConfig.setSubmittedFlightPlansPoolFrame(null);            
        }
        else {
            XHSConfig.setMyFlightPlans(null);
        }
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel stripsPanel;
    // End of variables declaration//GEN-END:variables

    private void loadStrips() {
        
        
        System.out.println("READING Flightstrips");
        
        this.jScrollPane1.removeAll();
        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new VerticalLayout());
        jScrollPane1.add(mainPanel);
        das hier geht noch nicht. es wird nichts dargestellt. Daten sind aber vorhanden
        this.revalidate();
        this.repaint();
        
       
        Session session = DBSessionManager.getSession();
        List<SubmittedFlightPlan> list = session.createCriteria(SubmittedFlightPlan.class).list();
        
        System.out.println("FOUND STRIPS: " + list.size());
        
        for (SubmittedFlightPlan p : list) {
            
            FligtPlanStripsPanel panel = new FligtPlanStripsPanel();
            panel.getUserNameLabel().setText(p.getFlightPlanOwner().getRegisteredUserName());
            panel.getFlightNumberLabel().setText(p.getFlightNumber());
            panel.getAircraftTypeLabel().setText(p.getAircraftType());
            panel.getAirlineLabel().setText(p.getAirline());
            panel.getCurrentSpeedLabel().setText("-");
            panel.getCurrentAltLabel().setText("-");
            panel.getCurrentHeadingLabel().setText("-");
            panel.getFromIcaoLabel().setText(p.getIcaoFrom());
            panel.getToIcaoLabel().setText(p.getIcaoTo());
            panel.getRemarkLabel().setText(p.getRemark());
            panel.getRouteLabel().setText(p.getRemark());
            mainPanel.add(panel);
            
        }
        this.revalidate();
        this.repaint();
        DBSessionManager.closeSession(session);
        
        
        
        
        
    }

}
